[
  // some disable
  {
    "key": "alt+n",
    "command": "-Notes.newNote"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-workbench.action.toggleDevTools",
    "when": "isDevelopment"
  },
  // like right click
  {
    "key": "shift+alt+m",
    "command": "editor.action.showContextMenu",
    "when": "editorFocus"
  },
  // fullScreen && Zen mode
  {
    "key": "f11",
    "command": "-workbench.action.toggleFullScreen"
  },
  {
    "key": "alt+enter",
    "command": "workbench.action.toggleFullScreen"
  },
  {
    "key": "shift+alt+enter",
    "command": "workbench.action.toggleZenMode"
  },
  // focusGroup
  {
    "key": "shift+alt+right",
    "command": "workbench.action.focusRightGroupWithoutWrap"
  },
  {
    "key": "shift+alt+left",
    "command": "workbench.action.focusLeftGroupWithoutWrap"
  },
  {
    "key": "shift+alt+up",
    "command": "workbench.action.focusAboveGroupWithoutWrap"
  },
  {
    "key": "shift+alt+down",
    "command": "workbench.action.focusBelowGroupWithoutWrap"
  },
  // open file/folder, outline, symbol
  {
    "key": "ctrl+shift+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+shift+t",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+shift+alt+t",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+t",
    "command": "outline.focus"
  },
  // git
  {
    "key": "alt+h",
    "command": "-git.viewFileHistory"
  },
  {
    "key": "shift+alt+g",
    "command": "git.viewFileHistory"
  },
  {
    "key": "ctrl+alt+t",
    "command": "timeline.focus"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+,",
    "command": "-editor.action.inPlaceReplace.up"
  },
  {
    "key": "ctrl+shift+,",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  // ctrl o
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-editor.action.accessibleViewGoToSymbol",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-workbench.action.gotoSymbol",
    "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
  },
  {
    "key": "ctrl+shift+o",
    "command": "workbench.action.files.openFile"
  },
  {
    "key": "ctrl+shift+alt+o",
    "command": "workbench.action.files.openFolder"
  },
  // quit
  {
    "key": "alt+q",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+shift+alt+q",
    "command": "workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "ctrl+shift+alt+v",
    "command": "workbench.action.openView"
  },
  {
    "key": "shift+alt+w",
    "command": "workbench.action.closeEditorsInGroup"
  },
  // definition
  {
    "key": "ctrl+alt+g",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+]",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "alt+c",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  // declaration && find source code
  {
    "key": "shift+alt+c",
    "command": "editor.action.revealDeclaration",
    "when": "editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "shift+alt+c",
    "command": "typescript.goToSourceDefinition",
    "when": "editorTextFocus && editorLangId == 'typescript'"
  },
  // type_definition
  {
    "key": "shift+alt+/",
    "command": "editor.action.peekTypeDefinition",
    "when": "editorTextFocus && !isInEmbeddedEditor"
  },
  // implementation
  {
    "key": "alt+.",
    "command": "-auto-close-tag.closeTag"
  },
  {
    "key": "alt+.",
    "command": "references-view.findImplementations"
  },
  // references
  {
    "key": "alt+/",
    "command": "references-view.findReferences",
    "when": "editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  // comment
  {
    "key": "ctrl+shift+oem_2",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  // insert mode up/down
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "up",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  // sidebartoggle
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  // find
  {
    "key": "ctrl+f",
    "command": "actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  // focus on editor && split cell
  {
    "key": "ctrl+alt+e",
    "command": "workbench.action.focusPanel",
    "when": "editorFoucs"
  },
  {
    "key": "ctrl+alt+e",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!editorFoucs"
  },
  {
    "key": "ctrl+shift+-",
    "command": "workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "shift+alt+s",
    "command": "notebook.cell.split",
    "when": "notebookCellEditable && notebookEditable && notebookEditorFocused"
  },
  // terminal
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "alt+=",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+shift+=",
    "command": "workbench.action.terminal.newWithProfile"
  },
  {
    "key": "ctrl+shift+=",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "shift+alt+=",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "shift+alt+-",
    "command": "workbench.action.terminal.kill",
    "when": "terminalHasBeenCreated || terminalIsOpen || terminalProcessSupported"
  },
  {
    "key": "shift+alt+[",
      "command": "workbench.action.terminal.focusPrevious"
  },
  {
    "key": "shift+alt+]",
    "command": "workbench.action.terminal.focusNext"
  },
  {
    "key": "ctrl+shift+alt+[",
      "command": "workbench.action.terminal.focusPreviousPane",
      "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+alt+]",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // panel
  {
    "key": "alt+-",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "alt+,",
    "command": "workbench.action.previousPanelView"
  },
  {
    "key": "alt+;",
    "command": "workbench.action.nextPanelView"
  },
  // copy
  {
    "key": "ctrl+shift+c",
    "command": "editor.action.clipboardCopyAction",
    "when": "editorTextFocus"
  },
  // debug && task
  {
    "key": "ctrl+shift+alt+d",
    "command": "workbench.action.debug.configure"
  },
  {
    "key": "alt+d",
    "command": "workbench.debug.action.focusCallStackView"
  },
  {
    "key": "ctrl+alt+d",
    "command": "debug.addConfiguration"
  },
  {
    "key": "shift+alt+b",
    "command": "workbench.action.tasks.runTask"
  },
  {
    "key": "ctrl+shift+alt+b",
    "command": "workbench.action.tasks.configureTaskRunner"
  },
  {
    "key": "shift+alt+.",
    "command": "jupyter.openVariableView",
    "when": "editorFocus && isWorkspaceTrusted && jupyter.hascodecells"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "jupyter.runallcellsabove.palette",
    "when": "editorFocus && isWorkspaceTrusted && jupyter.hascodecells"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "jupyter.runAndDebugCell",
    "when": "isWorkspaceTrusted && jupyter.ispythonnotebook && !notebookKernel && notebookCellType == 'code' || isWorkspaceTrusted && jupyter.ispythonnotebook && notebookCellType == 'code' && notebookKernel =~ /^ms-toolsai.jupyter\\// && resource not in 'jupyter.notebookeditor.debugDocuments'"
  },
  {
    "key": "alt+enter",
    "command": "jupyter.execSelectionInteractive",
    "when": "editorFocus && editorLangId == 'python'"
  },
  // bracket jump
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  // markdown
  {
    "key": "ctrl+alt+r",
    "command": "markdown-preview-enhanced.openPreviewToTheSide",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "f5",
    "command": "markdown-preview-enhanced.openPreviewToTheSide",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+f5",
    "command": "markdown-preview-enhanced.openPreview",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "shift+f5",
    "command": "-markdown-preview-enhanced.syncPreview",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-markdown-preview-enhanced.syncPreview",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+alt+s",
    "command": "markdown-preview-enhanced.syncPreview",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown-preview-enhanced.openPreview",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+k v",
    "command": "-markdown-preview-enhanced.openPreviewToTheSide",
    "when": "editorLangId == 'markdown'"
  },
  // codelens
  {
    "key": "alt+a",
    "command": "codelens.showLensesInCurrentLine",
    "when": "editorFocus"
  },
  // reload current file
  {
    "key": "ctrl+shift+alt+enter",
    "command": "multiCommand.reloadFile"
  },
  // transparency or glassit
  {
    "key": "ctrl+alt+x",
    "command": "-glassit.minimize"
  },
  // run
  {
    "key": "ctrl+alt+n",
    "command": "-code-runner.run"
  },
  {
    "key": "ctrl+alt+r",
    "command": "code-runner.run"
  },
  // ctrl n
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+n",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+n",
    "command": "welcome.showNewFileEntries"
  },
  {
    "key": "ctrl+alt+meta+n",
    "command": "-welcome.showNewFileEntries"
  },
  // open keybindings
  {
    "key": "ctrl+k ctrl+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+m ctrl+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+shift+alt+,",
    "command": "workbench.action.openGlobalKeybindingsFile"
  },
  {
    "key": "ctrl+alt+,",
    "command": "workbench.action.openGlobalKeybindings"
  },
  // split
  {
    "key": "ctrl+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "ctrl+k ctrl+\\",
    "command": "-workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+m ctrl+\\",
    "command": "-workbench.action.splitEditorDown"
  },
  {
    "key": "alt+]",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "alt+[",
    "command": "workbench.action.splitEditorDown"
  },
  //----------------------- windsurf --------------------
  //----------------------- cursor ----------------------
  //----------------------- kiro ------------------------
  //----------------------- lingma ------------------
  {
    "key": "ctrl+shift+l",
    "command": "-tongyi.show.panel.chat"
  },
  {
    "key": "ctrl+`",
    "command": "tongyi.show.panel.chat"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-tongyi.inline.edit",
    "when": "Lingma.Chat.active"
  },
  {
    "key": "ctrl+\\",
    "command": "tongyi.inline.edit",
    "when": "Lingma.Chat.active"
  },
  {
    "key": "alt+p",
    "command": "-tongyi.action.inlineSuggest.trigger",
    "command": "tongyi.action.inlineSuggest.trigger",
    "when": "Lingma.Chat.active"
  },
  {
    "key": "ctrl+shift+\\",
    "when": "Lingma.Chat.active"
  }
]
