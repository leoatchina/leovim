# MFC OPTIONS
#define _AFX_FUNCNAME(_Name) _Name##W
-D _AFX_FUNCNAME(_Name)=_Name##W
#define DEBUG_ONLY(f)      (f)
-D DEBUG_ONLY(f)=(f)
#define VERIFY(f)          ((void)(f))
-D VERIFY(f)=((void)(f))
#define DEBUG_ONLY(f)      ((void)0)
-D DEBUG_ONLY(f)=((void)0)
#define CModalDialog    CDialog
-D CModalDialog=CDialog
#define ATLTRYALLOC(x) x;
-D ATLTRY(x)=x
-D ATLTRYALLOC(x)=x
#define STDAPI EXTERN_C HRESULT STDAPICALLTYPE
-D STDAPI=HRESULT
#define STDAPI_(type) EXTERN_C type STDAPICALLTYPE
-D STDAPI_(type)=type
#define STDMETHODIMP HRESULT STDMETHODCALLTYPE
-D STDMETHODIMP=HRESULT
#define STDMETHODIMP_(type)     type STDMETHODCALLTYPE
-D STDMETHODIMP_(type)=type
#define STDAPIV EXTERN_C HRESULT STDAPIVCALLTYPE
-D STDAPIV=HRESULT
#define STDAPIV_(type) EXTERN_C type STDAPIVCALLTYPE
-D STDAPIV_(type)=type
#define STDMETHODIMPV HRESULT STDMETHODVCALLTYPE
-D STDMETHODIMPV=HRESULT
#define STDMETHODIMPV_(type)    type STDMETHODVCALLTYPE
-D STDMETHODIMPV_(type)=type
#define __STRUCT__ struct
-D __STRUCT__=struct
#define interface __STRUCT__
-D interface=struct
#define STDMETHOD(method) virtual COM_DECLSPEC_NOTHROW HRESULT STDMETHODCALLTYPE method
-D STDMETHOD(method)=virtual HRESULT method
-D IFACEMETHOD(method)=virtual HRESULT method
-D STDMETHODV(method)=virtual HRESULT method
-D IFACEMETHODV(method)=virtual HRESULT method
#define STDMETHOD_(type,method) virtual COM_DECLSPEC_NOTHROW type STDMETHODCALLTYPE method
-D STDMETHOD_(type, method)=virtual type method
-D IFACEMETHOD_(type, method)=virtual type method
-D STDMETHODV_(type, method)=virtual type method
-D IFACEMETHODV_(type, method)=virtual type method
#define PURE                    = 0
-D PURE= = 0
#define THIS                    void
-D THIS=void
#define DECLARE_INTERFACE(iface) interface DECLSPEC_NOVTABLE iface
-D DECLARE_INTERFACE(iface)=struct iface
#define DECLARE_INTERFACE_(iface, baseiface)    interface DECLSPEC_NOVTABLE iface : public baseiface
-D DECLARE_INTERFACE_(iface, baseiface)=struct iface : public baseiface
# Ignores
-I FAR
-I THIS_
-I STDMETHODCALLTYPE
-I STDAPICALLTYPE
-I __stdcall
-I STDMETHODVCALLTYPE
-I STDAPIVCALLTYPE
-I __cdecl
-I UNUSED+
-I AFX_NOVTABLE
-I PASCAL
-I _RUNTIME_CLASS+
-I RUNTIME_CLASS+
-I ASSERT_KINDOF+
-I DECLARE_DYNAMIC+
-I DECLARE_DYNCREATE+
-I DECLARE_SERIAL+
-I _DECLARE_DYNAMIC+
-I _DECLARE_DYNCREATE+
-I IMPLEMENT_RUNTIMECLASS+
-I _IMPLEMENT_RUNTIMECLASS+
-I IMPLEMENT_DYNAMIC+
-I IMPLEMENT_DYNCREATE+
-I IMPLEMENT_SERIAL+
-I _Success_+
-I _Out_writes_z_+
-I _In_
-I _Out_
-I _Inout_
-I _Out_opt_
-I AFX_DEPRECATED+
-I afx_msg
-I AFX_ANSI_DEPRECATED
-I DECLARE_MESSAGE_MAP
-I BEGIN_MESSAGE_MAP+
-I END_MESSAGE_MAP
-I AFX_DATA
-I AFX_CORE_DATA
-I AFXAPI
-I ASSERT_VALID
-I BEGIN_INTERFACE_PART+
-I INIT_INTERFACE_PART+
-I END_INTERFACE_PART+
-I DECLARE_INTERFACE_MAP

# ATL OPTIONS
#define _ATL_NEW		new
-D _ATL_NEW=new
#define __ATL_STRINGIZE(_Value) #_Value
#define _ATL_STRINGIZE(_Value) __ATL_STRINGIZE(_Value)
-D _ATL_STRINGIZE(x)=#x
-D __ATL_STRINGIZE(x)=#x
#define __ATL_APPEND(_Value1, _Value2) _Value1 ## _Value2
#define _ATL_APPEND(_Value1, _Value2) __ATL_APPEND(_Value1, _Value2)
-D __ATL_APPEND(_Value1, _Value2)=_Value1 ## _Value2
-D  _ATL_APPEND(_Value1, _Value2)=_Value1 ## _Value2
#define ATLAPI __declspec(nothrow) HRESULT __stdcall
-D ATLAPI=HRESULT
#define ATLAPI_(x) __declspec(nothrow) x __stdcall
-D ATLAPI_(x)=x
#define ATLAPIINL ATLAPI
-D ATLAPIINL=HRESULT
#define ATLAPIINL_(x) ATLAPI_(x)
-D ATLAPIINL_(x)=x
#define ATLINLINE inline
-D ATLINLINE=inline
#define _ATLTRY try
-D _ATLTRY=try
#define _ATLCATCH( e ) catch()
-D _ATLCATCH=catch(...)
-D _ATLCATCHALL=catch(...)
#define _ATLRETHROW throw
-D _ATLRETHROW=throw
# Ignores
-I ATLSTATIC_ASSERT+
-I ATLASSERT+
-I ATLASSUME+
-I ATLVERIFY+
-I ATLENSURE_THROW+
-I ATLENSURE_SUCCEEDED+
-I ATLENSURE_RETURN_VAL+
-I ATLENSURE_RETURN+
-I ATLENSURE_RETURN_HR+
-I ATL_CRT_ERRORCHECK+
-I ATL_CRT_ERRORCHECK_SPRINTF+
-I ATL_NO_VTABLE
-I ATL_NOTHROW
-I ATL_FORCEINLINE
-I ATL_NOINLINE
-I ATL_DEPRECATED+
-I _ATL_COM_BEGIN
-I _AFX_COM_END_PART
-I _ATL_COM_END
-I ATLTRYALLOC+
-I _ATL_INSECURE_DEPRECATE+
-I ATLPREFAST_SUPPRESS+
-I ATLPREFAST_UNSUPPRESS
-I _Ret_maybenull_
-I _Ret_z_
-I _Post_writable_byte_size_+
-I _Out_writes_opt_+
-I __declspec+
-I _In_z_
-I _In_opt_
-I _In_opt_z_
-I _Inout_updates_+
-I _Outref_result_maybenull_
-I _Outptr_
-I _Outptr_opt_
-I _Inout_opt_
-I BEGIN_MSG_MAP+
-I ALT_MSG_MAP+
-I MESSAGE_HANDLER+
-I MESSAGE_RANGE_HANDLER+
-I COMMAND_HANDLER+
-I COMMAND_ID_HANDLER+
-I COMMAND_CODE_HANDLER+
-I COMMAND_RANGE_HANDLER+
-I COMMAND_RANGE_CODE_HANDLER+
-I NOTIFY_HANDLER+
-I NOTIFY_ID_HANDLER+
-I NOTIFY_CODE_HANDLER+
-I NOTIFY_RANGE_HANDLER+
-I NOTIFY_RANGE_CODE_HANDLER+
-I CHAIN_MSG_MAP+
-I CHAIN_MSG_MAP_MEMBER+
-I CHAIN_MSG_MAP_ALT+
-I CHAIN_MSG_MAP_ALT_MEMBER+
-I CHAIN_MSG_MAP_DYNAMIC+
-I END_MSG_MAP
-I DECLARE_EMPTY_MSG_MAP
-I FORWARD_NOTIFICATIONS
-I REFLECT_NOTIFICATIONS
-I DEFAULT_REFLECTION_HANDLER
-I REFLECTED_COMMAND_HANDLER+
-I REFLECTED_COMMAND_ID_HANDLER+
-I REFLECTED_COMMAND_CODE_HANDLER+
-I REFLECTED_COMMAND_RANGE_HANDLER+
-I REFLECTED_COMMAND_RANGE_CODE_HANDLER+
-I REFLECTED_NOTIFY_HANDLER+
-I REFLECTED_NOTIFY_ID_HANDLER+
-I REFLECTED_NOTIFY_CODE_HANDLER+
-I REFLECTED_NOTIFY_RANGE_HANDLER+
-I REFLECTED_NOTIFY_RANGE_CODE_HANDLER+
-I DECLARE_WND_CLASS+
-I DECLARE_WND_CLASS2+
-I DECLARE_WND_CLASS_EX+
-I DECLARE_WND_CLASS_EX2+
-I DECLARE_WND_SUPERCLASS+
-I DECLARE_WND_SUPERCLASS2+
-I WINAPI
